{"version":3,"sources":["logo.svg","QuillEditor.js","App.js","reportWebVitals.js","index.js"],"names":["__ISMSIE__","navigator","userAgent","match","hljs","configure","languages","Clipboard","getMetaTagElements","stringContent","el","document","createElement","innerHTML","getElementsByTagName","e","a","clipboardData","window","getData","pastedData","urlMatches","length","preventDefault","forEach","link","axios","get","then","payload","title","image","url","node","getAttribute","rendered","range","quill","getSelection","position","index","pasteHTML","setSelection","catch","error","console","Quill","import","register","BlockEmbed","ImageBlot","value","imgTag","setAttribute","src","alt","blotName","tagName","VideoBlot","videoTag","iframeTag","FileBlot","prefixTag","innerText","bTag","linkTag","appendChild","querySelector","className","PollBlot","id","QuillEditor","props","handleChange","html","log","setState","editorHtml","onEditorChange","state","imageHandler","inputOpenImageRef","current","click","videoHandler","inputOpenVideoRef","fileHandler","inputOpenFileRef","insertImage","stopPropagation","currentTarget","files","file","formData","FormData","append","post","header","response","data","success","alert","reactQuillRef","getEditor","focus","insertEmbed","fileName","_isMounted","onFilesChange","insertVideo","insertFile","modules","syntax","highlight","text","highlightAuto","toolbar","container","handlers","insertPoll","pollHandler","formats","React","createRef","this","defaultValue","onChange","persist","ref","theme","placeholder","type","accept","style","display","Component","App","maxWidth","margin","textAlign","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.df2cdc89.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport hljs from 'highlight.js';\r\nimport 'highlight.js/styles/darcula.css';\r\nimport ReactQuill, { Quill } from 'react-quill';\r\nimport \"react-quill/dist/quill.snow.css\";\r\n\r\nimport axios from 'axios';\r\nconst __ISMSIE__ = navigator.userAgent.match(/Trident/i) ? true : false;\r\n\r\nhljs.configure({\r\n    languages: ['javascript', 'ruby', 'python', 'rust'],\r\n  })\r\nconst QuillClipboard = Quill.import('modules/clipboard');\r\n\r\nclass Clipboard extends QuillClipboard {\r\n\r\n    getMetaTagElements = (stringContent) => {\r\n        const el = document.createElement('div');\r\n        el.innerHTML = stringContent;\r\n        return el.getElementsByTagName('meta');\r\n    };\r\n\r\n    async onPaste(e) {\r\n        let clipboardData = e.clipboardData || window.clipboardData;\r\n        let pastedData = await clipboardData.getData('Text');\r\n\r\n        const urlMatches = pastedData.match(/\\b(http|https)?:\\/\\/\\S+/gi) || [];\r\n        if (urlMatches.length > 0) {\r\n            e.preventDefault();\r\n            urlMatches.forEach(link => {\r\n                axios.get(link)\r\n                    .then(payload => {\r\n                        // let title, image, url, description;\r\n                        let title, image, url;\r\n                        for (let node of this.getMetaTagElements(payload)) {\r\n                            if (node.getAttribute(\"property\") === \"og:title\") {\r\n                                title = node.getAttribute(\"content\");\r\n                            }\r\n                            if (node.getAttribute(\"property\") === \"og:image\") {\r\n                                image = node.getAttribute(\"content\");\r\n                            }\r\n                            if (node.getAttribute(\"property\") === \"og:url\") {\r\n                                url = node.getAttribute(\"content\");\r\n                            }\r\n                            // if (node.getAttribute(\"property\") === \"og:description\") {\r\n                            //     description = node.getAttribute(\"content\");\r\n                            // }\r\n                        }\r\n\r\n                        const rendered = `<a href=${url} target=\"_blank\"><div><img src=${image} alt=${title} width=\"20%\"/><span>${title}</span></div></a>`;\r\n\r\n                        let range = this.quill.getSelection();\r\n                        let position = range ? range.index : 0;\r\n                        this.quill.pasteHTML(position, rendered, 'silent');\r\n                        this.quill.setSelection(position + rendered.length);\r\n                    })\r\n                    .catch(error => console.error(error));\r\n            });\r\n\r\n        } else {\r\n            super.onPaste(e);\r\n        }\r\n    }\r\n\r\n}\r\nQuill.register('modules/clipboard', Clipboard, true);\r\n\r\nconst BlockEmbed = Quill.import('blots/block/embed');\r\n\r\nclass ImageBlot extends BlockEmbed {\r\n\r\n    static create(value) {\r\n        const imgTag = super.create();\r\n        imgTag.setAttribute('src', value.src);\r\n        imgTag.setAttribute('alt', value.alt);\r\n        imgTag.setAttribute('width', '100%');\r\n        return imgTag;\r\n    }\r\n\r\n    static value(node) {\r\n        return { src: node.getAttribute('src'), alt: node.getAttribute('alt') };\r\n    }\r\n\r\n}\r\n\r\nImageBlot.blotName = 'image';\r\nImageBlot.tagName = 'img';\r\nQuill.register(ImageBlot);\r\n\r\nclass VideoBlot extends BlockEmbed {\r\n\r\n    static create(value) {\r\n        if (value && value.src) {\r\n            const videoTag = super.create();\r\n            videoTag.setAttribute('src', value.src);\r\n            videoTag.setAttribute('title', value.title);\r\n            videoTag.setAttribute('width', '100%');\r\n            videoTag.setAttribute('controls', '');\r\n\r\n            return videoTag;\r\n        } else {\r\n            const iframeTag = document.createElement('iframe');\r\n            iframeTag.setAttribute('src', value);\r\n            iframeTag.setAttribute('frameborder', '0');\r\n            iframeTag.setAttribute('allowfullscreen', true);\r\n            iframeTag.setAttribute('width', '100%');\r\n            return iframeTag;\r\n        }\r\n    }\r\n\r\n    static value(node) {\r\n        if (node.getAttribute('title')) {\r\n            return { src: node.getAttribute('src'), alt: node.getAttribute('title') };\r\n        } else {\r\n            return node.getAttribute('src');\r\n        }\r\n    }\r\n\r\n}\r\n\r\nVideoBlot.blotName = 'video';\r\nVideoBlot.tagName = 'video';\r\nQuill.register(VideoBlot);\r\n\r\nclass FileBlot extends BlockEmbed {\r\n\r\n    static create(value) {\r\n        const prefixTag = document.createElement('span');\r\n        prefixTag.innerText = \"첨부파일 - \";\r\n\r\n        const bTag = document.createElement('b');\r\n        bTag.innerText = value;\r\n\r\n        const linkTag = document.createElement('a');\r\n        linkTag.setAttribute('href', value);\r\n        linkTag.setAttribute(\"target\", \"_blank\");\r\n        linkTag.setAttribute(\"className\", \"file-link-inner-post\");\r\n        linkTag.appendChild(bTag);\r\n\r\n        const node = super.create();\r\n        node.appendChild(prefixTag);\r\n        node.appendChild(linkTag);\r\n\r\n        return node;\r\n    }\r\n\r\n    static value(node) {\r\n        const linkTag = node.querySelector('a');\r\n        return linkTag.getAttribute('href');\r\n    }\r\n\r\n}\r\n\r\nFileBlot.blotName = 'file';\r\nFileBlot.tagName = 'p';\r\nFileBlot.className = 'file-inner-post';\r\nQuill.register(FileBlot);\r\n\r\nclass PollBlot extends BlockEmbed {\r\n\r\n    static create(value) {\r\n        const prefixTag = document.createElement('span');\r\n        prefixTag.innerText = \"투표 - \";\r\n\r\n        const bTag = document.createElement('b');\r\n        bTag.innerText = value.title;\r\n\r\n        const node = super.create();\r\n        node.setAttribute('id', value.id);\r\n        node.appendChild(prefixTag);\r\n        node.appendChild(bTag);\r\n\r\n        return node;\r\n    }\r\n\r\n    static value(node) {\r\n        const id = node.getAttribute('id');\r\n        const bTag = node.querySelector('b');\r\n        const title = bTag.innerText;\r\n        return { id, title };\r\n    }\r\n\r\n}\r\n\r\nPollBlot.blotName = 'poll';\r\nPollBlot.tagName = 'p';\r\nPollBlot.className = 'poll-inner-post';\r\nQuill.register(PollBlot);\r\n\r\nclass QuillEditor extends React.Component {\r\n\r\n    bandId;\r\n    placeholder;\r\n    onEditorChange;\r\n    onFilesChange;\r\n    onPollsChange;\r\n    _isMounted;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            editorHtml: __ISMSIE__ ? \"<p>&nbsp;</p>\" : \"\",\r\n            files: [],\r\n        };\r\n\r\n        this.reactQuillRef = null;\r\n\r\n        this.inputOpenImageRef = React.createRef();\r\n        this.inputOpenVideoRef = React.createRef();\r\n        this.inputOpenFileRef = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this._isMounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this._isMounted = false;\r\n    }\r\n\r\n    handleChange = (html) => {\r\n        console.log('html', html)\r\n    \r\n\r\n        this.setState({\r\n            editorHtml: html\r\n        }, () => {\r\n            this.props.onEditorChange(this.state.editorHtml);\r\n        });\r\n    };\r\n\r\n    imageHandler = () => {\r\n        this.inputOpenImageRef.current.click();\r\n    };\r\n\r\n    videoHandler = () => {\r\n        this.inputOpenVideoRef.current.click();\r\n    };\r\n\r\n    fileHandler = () => {\r\n        this.inputOpenFileRef.current.click();\r\n    };\r\n\r\n\r\n    insertImage = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\r\n            const file = e.currentTarget.files[0];\r\n\r\n            let formData = new FormData();\r\n            const config = {\r\n                header: { 'content-type': 'multipart/form-data' }\r\n            }\r\n            formData.append(\"file\", file);\r\n\r\n            axios.post('/api/blog/uploadfiles', formData, config)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        const quill = this.reactQuillRef.getEditor();\r\n                        quill.focus();\r\n\r\n                        let range = quill.getSelection();\r\n                        let position = range ? range.index : 0;\r\n\r\n                        quill.insertEmbed(position, \"image\", { src: \"http://localhost:5000/\" + response.data.url, alt: response.data.fileName });\r\n                        quill.setSelection(position + 1);\r\n\r\n                        if (this._isMounted) {\r\n                            this.setState({\r\n                                files: [...this.state.files, file]\r\n                            }, () => { this.props.onFilesChange(this.state.files) });\r\n                        }\r\n                    } else {\r\n                        return alert('failed to upload file')\r\n                    }\r\n                })\r\n        }\r\n    };\r\n\r\n    insertVideo = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\r\n            const file = e.currentTarget.files[0];\r\n\r\n            let formData = new FormData();\r\n            const config = {\r\n                header: { 'content-type': 'multipart/form-data' }\r\n            }\r\n            formData.append(\"file\", file);\r\n\r\n            axios.post('/api/blog/uploadfiles', formData, config)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        const quill = this.reactQuillRef.getEditor();\r\n                        quill.focus();\r\n\r\n                        let range = quill.getSelection();\r\n                        let position = range ? range.index : 0;\r\n                        quill.insertEmbed(position, \"video\", { src: \"http://localhost:5000/\" + response.data.url, title: response.data.fileName });\r\n                        quill.setSelection(position + 1);\r\n\r\n                        if (this._isMounted) {\r\n                            this.setState({\r\n                                files: [...this.state.files, file]\r\n                            }, () => { this.props.onFilesChange(this.state.files) });\r\n                        }\r\n                    } else {\r\n                        return alert('failed to upload file')\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n    insertFile = (e) => {\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n\r\n        if (e.currentTarget && e.currentTarget.files && e.currentTarget.files.length > 0) {\r\n            const file = e.currentTarget.files[0];\r\n            console.log(file);\r\n\r\n            let formData = new FormData();\r\n            const config = {\r\n                header: { 'content-type': 'multipart/form-data' }\r\n            }\r\n            formData.append(\"file\", file);\r\n\r\n            axios.post('/api/blog/uploadfiles', formData, config)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n\r\n                        const quill = this.reactQuillRef.getEditor();\r\n                        quill.focus();\r\n\r\n                        let range = quill.getSelection();\r\n                        let position = range ? range.index : 0;\r\n                        quill.insertEmbed(position, \"file\", response.data.fileName);\r\n                        quill.setSelection(position + 1);\r\n\r\n                        if (this._isMounted) {\r\n                            this.setState({\r\n                                files: [...this.state.files, file]\r\n                            }, () => { this.props.onFilesChange(this.state.files) });\r\n                        }\r\n                    };\r\n                })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id=\"toolbar\">\r\n                    <select className=\"ql-header\" defaultValue={\"\"} onChange={e => e.persist()}>\r\n                        <option value=\"1\" />\r\n                        <option value=\"2\" />\r\n                        <option value=\"\" />\r\n                    </select>\r\n                    <button className=\"ql-bold\" />\r\n                    <button className=\"ql-italic\" />\r\n                    <button className=\"ql-underline\" />\r\n                    <button className=\"ql-strike\" />\r\n                    <button className=\"ql-insertImage\"/>\r\n                    <button className=\"ql-insertVideo\"/>\r\n                    <button className=\"ql-insertFile\"/>\r\n                    <button className=\"ql-link\" />\r\n                    <button className=\"ql-code-block\" />\r\n                    <button className=\"ql-video\" />\r\n                    <button className=\"ql-blockquote\" />\r\n                    <button className=\"ql-clean\" />\r\n\r\n                    \r\n\r\n                </div>\r\n                <ReactQuill\r\n                    ref={(el) => { this.reactQuillRef = el }}\r\n                    theme={'snow'}\r\n                    onChange={this.handleChange}\r\n                    modules={this.modules}\r\n                    formats={this.formats}\r\n                    value={this.state.editorHtml}\r\n                    placeholder={this.props.placeholder}\r\n                />\r\n                <input type=\"file\" accept=\"image/*\" ref={this.inputOpenImageRef} style={{ display: \"none\" }} onChange={this.insertImage} />\r\n                <input type=\"file\" accept=\"video/*\" ref={this.inputOpenVideoRef} style={{ display: \"none\" }} onChange={this.insertVideo} />\r\n                <input type=\"file\" accept=\"*\" ref={this.inputOpenFileRef} style={{ display: \"none\" }} onChange={this.insertFile} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    modules = {\r\n             syntax: {\r\n            highlight: text => hljs.highlightAuto(text).value,\r\n            },\r\n            toolbar: {\r\n            container: \"#toolbar\",\r\n            handlers: {\r\n                insertImage: this.imageHandler,\r\n                insertVideo: this.videoHandler,\r\n                insertFile: this.fileHandler,\r\n                insertPoll: this.pollHandler,\r\n            }\r\n        },\r\n\r\n    };\r\n\r\n    formats = [\r\n        'header',\r\n        'bold', 'italic', 'underline', 'strike',\r\n        'image', 'video', 'file', 'link',\"code-block\", \"video\", \"blockquote\", \"clean\"\r\n    ];\r\n}\r\n\r\nexport default QuillEditor;","import logo from './logo.svg';\nimport './App.css';\nimport QuillEditor from \"./QuillEditor\"\nimport axios from 'axios';\n\n\n\n\nfunction App() {\n\n\n\n  const onEditorChange = (value) => {\n    console.log(value)\n  }\n  \n  return (\n    <div style={{ maxWidth: '700px', margin: '2rem auto' }}>\n    <div style={{ textAlign: 'center' }}>\n    </div>\n    <QuillEditor\n        placeholder={\"Write Here\"}\n        onEditorChange={onEditorChange}\n\n\n    />\n\n \n</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}